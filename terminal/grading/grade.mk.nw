There are two assignments that we should grade:
signing in to SSH (guide.md) and the terminal (terminal.md).
However, \emph{for now, we only grade the SSH part}.

The end goal of the guide.md assignment is that the students log into the 
[[student-shell]] system over SSH. We can run a shell script 
which queries the users who've signed in and simply tick our students off.

We will use the [[canvas]] command to report the grades. This must be installed 
from
\begin{center}
  \texttt{https://github.com/dbosk/canvasy}.
\end{center}

We will do this as a make include file to be able to keep state better.
The main target is [[grade]].
<<grade.mk>>=
# This file is generated from grade.mk.nw
<<variables>>

.PHONY: grade
grade:
	<<grade remaining students>>
	<<remove last(1) output>>

<<set up students to grade>>
<<get last(1) output from student-shell>>
@

We will keep students who must be graded in [[students-to-grade.tsv]].
Once we've reported them to Canvas, we can remove them from that list.
This list will contain their Canvas ID (first column) and their KTH username 
(second column).
We add [[students-to-grade.tsv]] as a prerequisite to [[grade]], then it will 
be created when necessary.
<<set up students to grade>>=
students-to-grade.tsv:
	canvas users -c ${COURSE_CODE} -s | cut -f 1,2 > $@

grade: students-to-grade.tsv
@ We set the course code in the [[<<variables>>]] block.
<<variables>>=
COURSE_CODE?= DD1301HT201
@

We'll use a similar construction for the logs of who has logged into 
student-shell.
We can simply SSH into the student-shell server and get the output from last(1) 
to see who of our students have logged in.
However, we'll do this in two steps.
First, we download [[wtmp]] in raw format as a separate target.
This way, we can add e.g.~[[wtmp.1]] instead of [[wtmp]] manually.
This is useful when we just passed the log rotation, so we don't miss anyone.
Second, read out [[wtmp]] with last(1) and filter entries.
For this to work, we must also add [[last.out]] as a prerequisite to [[grade]].
<<get last(1) output from student-shell>>=
last.out: wtmp
	last -f $^ | head -n -1 | cut -f 1 -d " " | sort | uniq > $@

wtmp:
	scp student-shell.sys.kth.se:/var/log/wtmp $@

grade: last.out
@ And to clean up we simply remove [[last.out]] and [[wtmp]].
<<remove last(1) output>>=
${RM} last.out wtmp
@

To grade, we iterate through the remaining students.
We check if the student has logged in, if not we continue to the next.
Otherwise we grade the student and remove it from the list.
<<grade remaining students>>=
for s in $$(cat students-to-grade.tsv | cut -f 2); do \
  grep "^$$(echo $$s | sed 's/@kth.se//')$$" last.out || continue; \
  canvas grade -c "${COURSE_CODE}" -a "${ASSIGNMENT}" \
    -u $$(grep $$s students-to-grade.tsv | cut -f 1) -g 1; \
  sed -i "/$$s/d" students-to-grade.tsv; \
done
@ We must set the [[ASSIGNMENT]] variable.
We will set it to a regular expression matching both terminal assignments.
<<variables>>=
ASSIGNMENT?=  (Preparing the terminal|The terminal)
@
